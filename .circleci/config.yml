version: 2.1

executors:
  rust-latest:
    working_directory: ~/repo
    docker:
      - image: circleci/rust:latest
  node-latest:
    working_directory: ~/repo
    docker:
      - image: circleci/node:latest

jobs:
  init-rs:
    executor: rust-latest
    steps:
      - checkout
      - run:
          name: Cargo install
          command: cargo install cargo-edit
      - run:
          name: Check formatting
          command: |
            rustfmt --version
            cargo fmt -- --check
      - run:
          name: Cargo install
          command: cargo install cargo-edit
      - run:
          name: Check formatting
          command: |
            rustfmt --version
            cargo fmt -- --check
      - run:
          name: update dependencies if releasing
          command: |
            if [[ "$CIRCLE_BRANCH" =~ release/v.* ]]; then
              grep branch Cargo.toml | grep develop | awk '{print $1}' | xargs -I[] cargo add --allow-prerelease []
              sed -i 's/branch = "develop", //g' Cargo.toml
              export CARGO_VER=$(echo $CIRCLE_BRANCH | sed 's:release/v::')
              sed -i "s/version=.*/version = \"$CARGO_VER\"/" Cargo.toml
            fi
      - run:
          name: debug
          command: cat Cargo.toml
      - run:
          name: Stable Build
          command: |
            rustup update
            rustup toolchain install stable
            rustup run stable rustc --version --verbose
            rustup run stable cargo --version --verbose
            rustup run stable cargo build
      - run:
          name: Wasm Build
          command: |
            rustup target add wasm32-unknown-unknown --toolchain stable
            rustup run stable cargo build --release --target wasm32-unknown-unknown
      - save_cache:
          key: rs-git-sha-{{ .Revision }}{{ .Branch }}
          paths:
            - ~/.cargo
            - ./target
            - Cargo.toml

  test-rs:
    executor: rust-latest
    steps:
      - checkout
      - restore_cache:
          key: rs-git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: Test
          command: |
            rustup toolchain install stable
            rustup run stable cargo test

  publish-latest-rs:
    executor: rust-latest
    steps:
      - checkout
      - restore_cache:
          key: rs-git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: cargo login
          command: cargo login $cargo_TOKEN
      - run:
          name: cargo publish
          command: cargo publish --allow-dirty
      - run:
          name: setup git config
          command: git config user.email "dev@mazzaroth.io" && git config user.name "CricleCI" && git config --global core.editor "\usr\local\bin\subl -n -w"
      - run:
          name: commit updates
          command: git add -A && git commit -m "Dependency/Version update for $CIRCLE_BRANCH"

  init:
    executor: node-latest
    steps:
      - checkout
      - run:
          name: npm install
          command: npm i
      - run:
          name: install ci tools
          command: 'mkdir -p ~/.build_tools/node && npm install --prefix ~/.build_tools/node kl-ci-tools'
      - run:
          name: update dependencies if releasing
          command: |
            if [[ "$CIRCLE_BRANCH" =~ release/v.* ]]; then
              ~/.build_tools/node/node_modules/kl-ci-tools/dist/bin.js deps | xargs -I[] npm install []@latest
            fi
      - save_cache:
          key: js-git-sha-{{ .Revision }}{{ .Branch }}
          paths:
            - package.json
            - node_modules
            - ~/.build_tools
  test:
    executor: node-latest
    steps:
      - checkout
      - restore_cache:
          key: js-git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: npm build
          command: npm run build
      - run:
          name: lint
          command: npm run lint
      - run:
          name: test
          command: npm test
      - save_cache:
          key: js-git-sha-{{ .Revision }}{{ .Branch }}
          paths:
            - package.json
            - dist
            - node_modules
            - ~/.build_tools


  publish-dev:
    executor: node-latest
    steps:
      - checkout
      - restore_cache:
          key: js-git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: set develop version
          command: git rev-parse develop | cut -c1-10 | xargs -I[] ~/.build_tools/node/node_modules/kl-ci-tools/dist/bin.js tag dev.[]
      - run:
          name: authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > .npmrc
      - run:
          name: publish package
          command: npm publish --tag develop

  publish-latest:
    executor: node-latest
    steps:
      - checkout
      - restore_cache:
          key: js-git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: setup git config
          command: git config user.email "dev@mazzaroth.io" && git config user.name "CricleCI" && git config --global core.editor "\usr\local\bin\subl -n -w"
      - run:
          name: update version
          command: echo $CIRCLE_BRANCH | sed 's:release/::' | xargs npm version --no-git-tag-version
      - run:
          name: verify package.json
          command: ~/.build_tools/node/node_modules/kl-ci-tools/dist/bin.js validate
      - run:
          name: commit updates
          command: git add -A && git commit -m "Dependency/Version update for $CIRCLE_BRANCH"
      - run:
          name: pull latest from master
          command: git pull --no-edit -Xours --rebase origin master
      - run:
          name: update master
          command: git checkout master && git rebase -Xtheirs $CIRCLE_BRANCH && git push origin master
      - run:
          name: authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > .npmrc
      - run:
          name: publish package
          command: npm publish --tag latest
      - run:
          name: checkout and develop
          command: git checkout develop
      - run:
          name: update develop version
          command: echo $CIRCLE_BRANCH | sed 's:release/::' | xargs npm --no-git-tag-version version
      - run:
          name: commit updates
          command: git add -A && git commit -m "Version update for $CIRCLE_BRANCH" && git push origin develop

workflows:
  version: 2.1
  build_test_deploy:
    jobs:
      - init-rs
      - test-rs:
          requires:
            - init-rs
      - init
      - test:
          requires:
            - init
      - publish-dev:
          requires:
            - test
            - test-rs
          filters:
            branches:
              only: develop
      - publish-latest-rs:
          requires:
            - test
            - test-rs
          filters:
            branches:
              only: /release\/v([0-9]+)\.([0-9]+)\.([0-9]+)$/
      - publish-latest:
          requires:
            - publish-latest-rs
          filters:
            branches:
              only: /release\/v([0-9]+)\.([0-9]+)\.([0-9]+)$/
